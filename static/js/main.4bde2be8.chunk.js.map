{"version":3,"sources":["components/Section.js","components/Statistics.js","components/FeedbackOptions.js","components/Notification.js","components/App/App.js","index.js"],"names":["Section","title","children","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","item","type","onClick","Notification","message","App","state","onBtnCLick","option","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","this","Component","ReactDOM","render","document","getElementById"],"mappings":"yNAUeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BF,IACzBC,MCSUE,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,mCACE,qBAAIN,UAAU,iBAAd,UACE,qBAAIA,UAAU,iBAAd,mBAAsCE,KACtC,qBAAIF,UAAU,iBAAd,sBAAyCG,KACzC,qBAAIH,UAAU,iBAAd,kBAAqCI,EAArC,OACA,yCAAYC,KACZ,qDAAwBC,WCQfC,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,6BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAAmBX,UAAU,WAAWY,KAAK,SAASC,QAASJ,EAAgBE,GAA/E,SACGA,GADUA,SCAJG,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,KCgD5BC,E,4MA5CbC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,WAAa,SAACC,GAAD,OAAY,WACvB,EAAKC,UAAS,SAACC,GAAD,sBAAmBF,EAASE,EAAUF,GAAU,Q,EAGhEG,mBAAqB,kBAAM,EAAKL,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAC7EmB,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKR,MAAMf,MAAQ,EAAKe,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,KAAQ,M,4CAE3F,WACE,IAAMe,EAASO,OAAOC,KAAKC,KAAKX,OAC1BZ,EAAQuB,KAAKN,qBACbhB,EAAqBsB,KAAKL,kCAChC,EAA+BK,KAAKX,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASN,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBU,QAASW,EAAQV,gBAAiBmB,KAAKV,eAG1D,cAAC,EAAD,CAASpB,MAAO,aAAhB,SACa,IAAVO,EACC,cAAC,EAAD,CAAcU,QAAQ,sBAEtB,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GApChBuB,aCFlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4bde2be8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => (\n  <div className=\"container\">\n    <h2 className=\"feedback\">{title}</h2>\n    {children}\n  </div>\n);\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <ul className=\"statistic-list\">\n      <li className=\"statistic-item\">Good: {good}</li>\n      <li className=\"statistic-item\">Neutral: {neutral}</li>\n      <li className=\"statistic-item\">Bad: {bad} </li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}</li>\n    </ul>\n  </>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul>\n    {options.map((item) => (\n      <button key={item} className=\"btn-good\" type=\"button\" onClick={onLeaveFeedback(item)}>\n        {item}\n      </button>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import styles from \"./Statistics.module.css\";\n\nconst Notification = ({ message }) => <h3>{message}</h3>;\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Section from \"../Section\";\nimport Statistics from \"../Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions\";\nimport Notification from \"../Notification\";\n// import \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onBtnCLick = (option) => () => {\n    this.setState((prevState) => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback = () => this.state.good + this.state.neutral + this.state.bad;\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / (this.state.good + this.state.neutral + this.state.bad)) * 100);\n\n  render() {\n    const option = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions options={option} onLeaveFeedback={this.onBtnCLick} />\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}